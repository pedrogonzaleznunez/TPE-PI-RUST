#!/bin/bash

# Conventional Commits validation hook
# This hook validates that commit messages follow the Conventional Commits specification
# Format: <type>[optional scope]: <description>
# Example: feat(auth): add login endpoint

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

commit_message=$(cat "$1")

if [[ $commit_message =~ ^Merge ]]; then
    echo -e "${GREEN}✓ Merge commit detected, skipping validation${NC}"
    exit 0
fi

if [[ $commit_message =~ ^Revert ]]; then
    echo -e "${GREEN}✓ Revert commit detected, skipping validation${NC}"
    exit 0
fi

# Note: both type and scope must be lowercase
pattern="^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\([a-z0-9-]+\))?!?: .{1,50}"

if [[ $commit_message =~ $pattern ]]; then
    type_and_scope=$(echo "$commit_message" | grep -oE '^[a-z]+(\([a-z0-9-]+\))?!?')
    if [[ -n "$type_and_scope" ]]; then
        echo -e "${GREEN}✓ Commit message follows Conventional Commits format${NC}"
        exit 0
    fi
fi

echo -e "${RED}✗ Invalid commit message format${NC}"
echo -e "${YELLOW}"
    echo "Commit message must follow Conventional Commits format:"
    echo ""
    echo "  <type>(scope): <description>"
    echo ""
    echo "NOTE: Scope is REQUIRED and must be in parentheses"
    echo "NOTE: Both type and scope must be lowercase (a-z, 0-9, hyphens only)"
    echo ""
    echo "Types:"
    echo "  feat:     A new feature"
    echo "  fix:      A bug fix"
    echo "  docs:     Documentation only changes"
    echo "  style:    Changes that do not affect the meaning of the code"
    echo "  refactor: A code change that neither fixes a bug nor adds a feature"
    echo "  test:     Adding missing tests or correcting existing tests"
    echo "  chore:    Changes to the build process or auxiliary tools"
    echo "  perf:     A code change that improves performance"
    echo "  ci:       Changes to CI configuration files and scripts"
    echo "  build:    Changes that affect the build system or external dependencies"
    echo "  revert:   Reverts a previous commit"
    echo ""
    echo "Examples:"
    echo "  feat(auth): add user authentication"
    echo "  fix(auth): resolve login issue"
    echo "  docs(api): update API documentation"
    echo "  chore(deps): update dependencies"
    echo ""
    echo "Your commit message:"
    echo "  $commit_message"
    echo -e "${NC}"
    exit 1
fi
